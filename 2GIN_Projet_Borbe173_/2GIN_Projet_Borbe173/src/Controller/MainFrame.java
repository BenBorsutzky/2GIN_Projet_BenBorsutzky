package Controller;


import Model.Ball;
import Model.Game;
import View.DrawPanel;
import java.util.ArrayList;
import javax.swing.Timer;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Borsutzky
 */
public class MainFrame extends javax.swing.JFrame {
    private Game game; // new game
    private Timer timer; // new timer
    private long startingTime;  //current time from the start of the game
    private long stopTime; //current time from the end of the game
    private ArrayList<Ball> alScores = new ArrayList<>();
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        timer = new Timer(1000/60,evt->updateView());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        drawPanel1 = new View.DrawPanel();
        startButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        drawPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                drawPanel1MousePressed(evt);
            }
        });

        startButton.setFont(new java.awt.Font("Tw Cen MT", 1, 36)); // NOI18N
        startButton.setText("Start Game");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout drawPanel1Layout = new javax.swing.GroupLayout(drawPanel1);
        drawPanel1.setLayout(drawPanel1Layout);
        drawPanel1Layout.setHorizontalGroup(
            drawPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawPanel1Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );
        drawPanel1Layout.setVerticalGroup(
            drawPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawPanel1Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(drawPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(drawPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //update the Drawpanel and looks if the game is over
    private void updateView(){
        drawPanel1.repaint();
        game.start(drawPanel1.getWidth(),drawPanel1.getHeight());
        if(game.isGameOver()){
            alScores.add(game.getBall());
            sortList();
            jList.setListData(toArray());
            stopTime = System.nanoTime();
            LooseFrame frame = new LooseFrame(this);
            frame.setVisible(true);
            timer.stop();
        }
        
        
    }
    
    public Object[] toArray() {
        return alScores.toArray();
    }
    
    
    //restarts the game
    public void restart(){
        game = new Game(drawPanel1.getWidth(), drawPanel1.getHeight());
        drawPanel1.setGame(game);
        timer.start();
        startingTime = System.nanoTime();
        startButton.setVisible(false);
        
    }    
    
    //method to play with the left and right mouse button
    private void drawPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawPanel1MousePressed
        if(evt.getButton()==1){
            game.moveRight();
        }
        else if(evt.getButton()==3){
            game.moveLeft();
        }
    }//GEN-LAST:event_drawPanel1MousePressed
    
    //starts the game after pressing the startbutton
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        restart();
    }//GEN-LAST:event_startButtonActionPerformed
    
    //sort the list with the the score from the highest to the lowest score
    private void sortList(){
        for(int i = 0; i < alScores.size(); i++) {
	    int minIndex = i;
	    for(int j = i; j < alScores.size(); j++) {
		if(alScores.get(j).getScore()> alScores.get(minIndex).getScore()) {
		    minIndex = j;
		}
            }
	    Ball swap = alScores.get(minIndex);
	    alScores.set(minIndex, alScores.get(i));
	    alScores.set(i, swap);
    }
    }
    
    //gets the gameTime in Seconds
    public double getTimeInSeconds(){
        return (getTimeInMilliSeconds())/1000.0;
    }
    
    //gets the gameTime in Milliseconds
    public long getTimeInMilliSeconds(){
        return (stopTime-startingTime)/1000000;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private View.DrawPanel drawPanel1;
    private javax.swing.JList jList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}